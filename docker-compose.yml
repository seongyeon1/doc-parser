version: '3.8'

services:
  # API 서버
  api-server:
    build:
      context: ./doc-parser
      dockerfile: Dockerfile
    container_name: doc-parser-api
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}
      - PYTHONPATH=/app
    volumes:
      - ./doc-parser:/app
      - ./analyze/data:/app/analyze/data
      - ./analyze/result:/app/analyze/result
    networks:
      - doc-parser-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 시각화 서버
  viz-server:
    build:
      context: ./analyze
      dockerfile: Dockerfile
    container_name: doc-parser-viz
    ports:
      - "0.0.0.0:8080:8080"
    volumes:
      - ./analyze:/app
      - ./analyze/data:/app/data
      - ./analyze/result:/app/result
    networks:
      - doc-parser-network
    restart: unless-stopped
    depends_on:
      - api-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 리버스 프록시 (선택사항)
  nginx:
    image: nginx:alpine
    container_name: doc-parser-nginx
    ports:
      - "0.0.0.0:80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - doc-parser-network
    restart: unless-stopped
    depends_on:
      - api-server
      - viz-server

networks:
  doc-parser-network:
    driver: bridge

volumes:
  data-volume:
  result-volume:
