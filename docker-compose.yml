version: '3.8'

services:
  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: doc-parser-backend
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - doc-parser-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: doc-parser-frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - doc-parser-network
    restart: unless-stopped
    depends_on:
      - backend

  # Redis for background tasks
  redis:
    image: redis:7-alpine
    container_name: doc-parser-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - doc-parser-network
    restart: unless-stopped

  # Celery worker for background processing
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: doc-parser-celery
    command: ["celery", "-A", "background_processor", "worker", "--loglevel=info"]
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - doc-parser-network
    restart: unless-stopped
    depends_on:
      - redis
      - backend

networks:
  doc-parser-network:
    driver: bridge

volumes:
  redis_data:
